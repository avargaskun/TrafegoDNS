<?xml version="1.0"?>
<Container version="2">
    <Name>TráfegoDNS</Name>
    <n>trafegodns</n>
    <Repository>eafxx/traefik-dns-manager:latest</Repository>
    <Registry>https://hub.docker.com/r/eafxx/traefik-dns-manager/</Registry>
    <Network>bridge</Network>
    <Shell>bash</Shell>
    <Privileged>false</Privileged>
    <Support>https://github.com/elmerfds/traefik-dns-manager/issues</Support>
    <Project>https://github.com/elmerfds/traefik-dns-manager/</Project>
    <Overview>TráfegoDNS automatically manages DNS records based on container configuration. It supports both Traefik integration and direct Docker container label mode, making it compatible with any web server or reverse proxy solution.&#xD;
        &#xD;
        Key Features:&#xD;
        - Supports multiple DNS providers (Cloudflare, DigitalOcean, Route53)&#xD;
        - Two operation modes: Traefik API integration or direct Docker labels&#xD;
        - Automatic apex domain handling&#xD;
        - Optional cleanup of orphaned DNS records&#xD;
        - Real-time monitoring of Docker container events</Overview>
    <Category>Network:DNS Status:Stable</Category>
    <WebUI/>
    <TemplateURL>https://raw.githubusercontent.com/elmerfds/traefik-dns-manager/master/unraid/trafegodns.xml</TemplateURL>
    <Icon>https://raw.githubusercontent.com/elmerfds/TrafegoDNS/refs/heads/main/logo/logo.png</Icon>
    <ExtraParams/>
    <PostArgs/>
    <CPUset/>
    <DateInstalled>1711297200</DateInstalled>
    <DonateText>If you appreciate my work, please consider donating!</DonateText>
    <DonateLink>https://github.com/elmerfds/traefik-dns-manager</DonateLink>
    <Description>TráfegoDNS automatically manages DNS records based on container configuration. It supports both Traefik integration and direct Docker container label mode, making it compatible with any web server or reverse proxy solution.

        ## Features

        - Automatic DNS record management based on container configuration
        - Support for multiple DNS providers (Cloudflare, DigitalOcean, Route53)
        - Dual operation modes: Traefik integration or direct container labels
        - Real-time monitoring of Docker container events
        - Support for multiple DNS record types (A, AAAA, CNAME, MX, TXT, SRV, CAA)
        - Automatic public IP detection for apex domains
        - Fine-grained control with service-specific labels
        - Fault-tolerant design with retry mechanisms
        - Optional cleanup of orphaned DNS records with preservation capabilities
        - Optimized performance with DNS caching and batch processing
        - Configurable logging levels for better troubleshooting
        - Support for explicitly preserving specific hostnames from cleanup
        - Manual creation and management of hostnames independent of containers
        - PUID/PGID support for proper file permissions</Description>
    <Networking>
        <Mode>bridge</Mode>
        <Publish/>
    </Networking>
    <Data>
        <Volume>
            <HostDir>/mnt/user/appdata/trafegodns</HostDir>
            <ContainerDir>/config</ContainerDir>
            <Mode>rw</Mode>
        </Volume>
        <Volume>
            <HostDir>/var/run/docker.sock</HostDir>
            <ContainerDir>/var/run/docker.sock</ContainerDir>
            <Mode>ro</Mode>
        </Volume>
    </Data>
    <Environment>
        <Variable>
            <n>PUID</n>
            <Value>99</Value>
        </Variable>
        <Variable>
            <n>PGID</n>
            <Value>100</Value>
        </Variable>
        <Variable>
            <n>OPERATION_MODE</n>
            <Value>traefik</Value>
        </Variable>
        <Variable>
            <n>DNS_PROVIDER</n>
            <Value>cloudflare</Value>
        </Variable>
        <Variable>
            <n>CLOUDFLARE_TOKEN</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>CLOUDFLARE_ZONE</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>DO_TOKEN</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>DO_DOMAIN</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>ROUTE53_ACCESS_KEY</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>ROUTE53_SECRET_KEY</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>ROUTE53_ZONE</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>ROUTE53_ZONE_ID</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>ROUTE53_REGION</n>
            <Value>eu-west-2</Value>
        </Variable>
        <Variable>
            <n>TRAEFIK_API_URL</n>
            <Value>http://traefik:8080/api</Value>
        </Variable>
        <Variable>
            <n>TRAEFIK_API_USERNAME</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>TRAEFIK_API_PASSWORD</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>CLEANUP_ORPHANED</n>
            <Value>false</Value>
        </Variable>
        <Variable>
            <n>LOG_LEVEL</n>
            <Value>INFO</Value>
        </Variable>
        <Variable>
            <n>PRESERVED_HOSTNAMES</n>
            <Value></Value>
        </Variable>
        <Variable>
            <n>MANAGED_HOSTNAMES</n>
            <Value></Value>
        </Variable>
    </Environment>

    <!-- Basic Settings -->
    <Config Name="Operation Mode" Target="OPERATION_MODE" Default="traefik|direct" Mode="" Description="Choose how to detect hostnames: Traefik API or direct container labels" Type="Variable" Display="always" Required="true" Mask="false">traefik</Config>

    <!-- DNS Provider -->
    <Config Name="DNS Provider" Target="DNS_PROVIDER" Default="cloudflare|digitalocean|route53" Mode="" Description="Select DNS provider to use" Type="Variable" Display="always" Required="true" Mask="false">cloudflare</Config>

    <!-- Provider Settings -->
    <!-- Cloudflare Settings -->
    <Config Name="Cloudflare Token" Target="CLOUDFLARE_TOKEN" Default="" Mode="" Description="Cloudflare API token (requires DNS edit permissions)" Type="Variable" Display="always" Required="false" Mask="true"></Config>
    <Config Name="Cloudflare Zone" Target="CLOUDFLARE_ZONE" Default="" Mode="" Description="Your domain name managed in Cloudflare (e.g., example.com)" Type="Variable" Display="always" Required="false" Mask="false"></Config>

    <!-- DigitalOcean Settings -->
    <Config Name="DigitalOcean Token" Target="DO_TOKEN" Default="" Mode="" Description="DigitalOcean API token (requires write access)" Type="Variable" Display="always" Required="false" Mask="true"></Config>
    <Config Name="DigitalOcean Domain" Target="DO_DOMAIN" Default="" Mode="" Description="Your domain name managed in DigitalOcean (e.g., example.com)" Type="Variable" Display="always" Required="false" Mask="false"></Config>

    <!-- Route53 Settings -->
    <Config Name="Route53 Access Key" Target="ROUTE53_ACCESS_KEY" Default="" Mode="" Description="AWS IAM access key with Route53 permissions" Type="Variable" Display="always" Required="false" Mask="true"></Config>
    <Config Name="Route53 Secret Key" Target="ROUTE53_SECRET_KEY" Default="" Mode="" Description="AWS IAM secret key" Type="Variable" Display="always" Required="false" Mask="true"></Config>
    <Config Name="Route53 Zone" Target="ROUTE53_ZONE" Default="" Mode="" Description="Your domain name managed in Route53 (e.g., example.com)" Type="Variable" Display="always" Required="false" Mask="false"></Config>

    <!-- Traefik Settings (only shown when Operation Mode is traefik) -->
    <Config Name="Traefik API URL" Target="TRAEFIK_API_URL" Default="http://traefik:8080/api" Mode="" Description="URL to Traefik API (including protocol and port)" Type="Variable" Display="always" Required="false" Mask="false">http://traefik:8080/api</Config>

    <!-- Core Settings -->
    <Config Name="Cleanup Orphaned" Target="CLEANUP_ORPHANED" Default="true|false" Mode="" Description="Whether to automatically remove orphaned DNS records" Type="Variable" Display="always" Required="false" Mask="false">false</Config>
    
    <Config Name="Config Path" Target="/config" Default="/mnt/user/appdata/trafegodns" Mode="rw" Description="Configuration storage path" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/trafegodns</Config>
    <Config Name="Docker Socket" Target="/var/run/docker.sock" Default="/var/run/docker.sock" Mode="ro" Description="Docker socket for container monitoring" Type="Path" Display="always" Required="true" Mask="false">/var/run/docker.sock</Config>

    <!-- More/Advanced Settings -->
    <Config Name="PUID" Target="PUID" Default="99" Mode="" Description="User ID to run as" Type="Variable" Display="advanced" Required="false" Mask="false">99</Config>
    <Config Name="PGID" Target="PGID" Default="100" Mode="" Description="Group ID to run as" Type="Variable" Display="advanced" Required="false" Mask="false">100</Config>
    <Config Name="Log Level" Target="LOG_LEVEL" Default="ERROR|WARN|INFO|DEBUG|TRACE" Mode="" Description="Logging level" Type="Variable" Display="advanced" Required="false" Mask="false">INFO</Config>
    <Config Name="Preserved Hostnames" Target="PRESERVED_HOSTNAMES" Default="" Mode="" Description="Comma-separated list of hostnames to preserve from cleanup (supports wildcards)" Type="Variable" Display="advanced" Required="false" Mask="false"></Config>
    <Config Name="Managed Hostnames" Target="MANAGED_HOSTNAMES" Default="" Mode="" Description="Comma-separated list of hostnames to create and maintain (format: hostname:type:content:ttl:proxied)" Type="Variable" Display="advanced" Required="false" Mask="false"></Config>

    <!-- Advanced Settings -->
    <Config Name="Traefik API Username" Target="TRAEFIK_API_USERNAME" Default="" Mode="" Description="Optional basic auth username for Traefik API" Type="Variable" Display="advanced" Required="false" Mask="false"></Config>
    <Config Name="Traefik API Password" Target="TRAEFIK_API_PASSWORD" Default="" Mode="" Description="Optional basic auth password for Traefik API" Type="Variable" Display="advanced" Required="false" Mask="true"></Config>
    <Config Name="Route53 Zone ID" Target="ROUTE53_ZONE_ID" Default="" Mode="" Description="Alternative to ROUTE53_ZONE: Your Route53 hosted zone ID" Type="Variable" Display="advanced" Required="false" Mask="false"></Config>
    <Config Name="Route53 Region" Target="ROUTE53_REGION" Default="eu-west-2" Mode="" Description="AWS region for Route53 API calls" Type="Variable" Display="advanced" Required="false" Mask="false">eu-west-2</Config>
</Container>
